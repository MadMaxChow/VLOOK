/**************************************
 *
 * VLOOK CSS - Mermaid 自定义样式
 * (配合 base.less 进行使用)
 *
 * V16.0
 * 2023-05-07
 * powered by MAX°孟兆
 *
 * QQ Group: 805502564
 * email: maxchow@qq.com
 *
 * https://github.com/MadMaxChow/VLOOK
 * https://gitee.com/madmaxchow/VLOOK
 *
 *************************************/

:root {
    // #Mermaid_Var
    --mm-sequence-numbers: on;
    --mm-flowchart-curve: basis;

    --mm-font-family: var(--v-f-fm-tag);
    --mm-alt-font-family: var(--v-f-fm-tag);

    --mm-c-red: var(--ac-red);
    --mm-c-red-alt: var(--ac-red-alt);
    --mm-c-orange: var(--ac-orange);
    --mm-c-orange-alt: var(--ac-orange-alt);
    --mm-c-yellow: var(--ac-yellow);
    --mm-c-yellow-alt: var(--ac-yellow-alt);
    --mm-c-green: var(--ac-green);
    --mm-c-green-alt: var(--ac-green-alt);
    --mm-c-cyan: var(--ac-cyan);
    --mm-c-cyan-alt: var(--ac-cyan-alt);
    --mm-c-blue: var(--ac-blue);
    --mm-c-blue-alt: var(--ac-blue-alt);
    --mm-c-purple: var(--ac-purple);
    --mm-c-purple-alt: var(--ac-purple-alt);
    --mm-c-pink: var(--ac-pink);
    --mm-c-pink-alt: var(--ac-pink-alt);
    --mm-c-brown: var(--ac-brown);
    --mm-c-brown-alt: var(--ac-brown-alt);
    --mm-c-gray: var(--ac-gray);
    --mm-c-gray-alt: var(--ac-gray-alt);
}

// ** 注意 **
// 更改某些段与字体相关的样式时，须同步修改切换字体样式的 JS 代码
// 这些样式包括 #JS 字样

// 全局字体设置
svg[aria-roledescription] text,
svg[aria-roledescription] span,
svg[aria-roledescription] tspan,
svg[aria-roledescription] .edgeLabel,
svg[aria-roledescription] .nodeLabel {
   font-family: var(--v-f-fm-tag) !important;
   color: var(--d-f-c) !important;
   fill: var(--d-f-c) !important;
}

svg[aria-roledescription] {
    fill: var(--d-bc) !important;
    background-color: var(--d-bc) !important;
}

// 鼠标悬停
svg[aria-roledescription] .node:hover {
    cursor: crosshair;
}
svg[aria-roledescription] .node:hover circle,
svg[aria-roledescription] .node:hover polygon,
svg[aria-roledescription] .node:hover path,
svg[aria-roledescription] .node:hover rect {
    fill: var(--ac-theme1-alt) !important;
    stroke: @aColor !important;
    cursor: crosshair;
}
svg[aria-roledescription] .node[id^="flowchart-inpage"]:hover circle,
svg[aria-roledescription] .node[id^="flowchart-outpage"]:hover polygon {
    stroke: @aColor !important;
}

svg[aria-roledescription] .label div {
    text-align: center;
}

.md-diagram-panel, svg {
    color: var(--d-f-c) !important;
    line-height: 1 !important;
}
.md-diagram-panel {
    padding-bottom: 8px; // 针对 Mermaid 图表，不添加会导致出现滚动条
}


// 可点击对象
svg[aria-roledescription] .clickable:hover circle,
svg[aria-roledescription] .clickable:hover polygon
svg[aria-roledescription] .clickable:hover path,
svg[aria-roledescription] .clickable:hover rect {
    cursor: pointer !important;
}

/* ----- pie diagram 饼图 ----- */

// 标题、图例文本
svg[aria-roledescription="pie"] .pieTitleText {
    fill: var(--d-f-c) !important;
    font-weight: var(--v-f-w-title) !important;
    font-size: 1.5em !important;
}
svg[aria-roledescription="pie"] .legend text {
    fill: var(--d-f-c) !important;
    font-weight: var(--v-f-w-title) !important;
}

svg[aria-roledescription="pie"] .slice {
    font-weight: var(--v-f-w-title) !important;
}

/* ----- flow diagram 流程图 ----- */

svg[aria-roledescription^="flowchart"] {
    font-size: .875em !important;
}

// 节点文本
svg[aria-roledescription^="flowchart"] .nodeLabel {
    color: var(--d-f-c) !important;
    font-weight: bold !important;
}

// 图元节点
svg[aria-roledescription^="flowchart"] .node circle,
svg[aria-roledescription^="flowchart"] .node polygon,
svg[aria-roledescription^="flowchart"] .node path,
svg[aria-roledescription^="flowchart"] .node rect {
    fill: var(--pn-c) !important;
    stroke: var(--d-f-c) !important;
}

// 自定义：同页、离页、
svg[aria-roledescription^="flowchart"] .node[id^="flowchart-inpage"] circle,
svg[aria-roledescription^="flowchart"] .node[id^="flowchart-outpage"] polygon {
    stroke-width: 1 !important;
    stroke: var(--d-f-c-alt) !important;
    // stroke: @aColor !important;
    stroke-dasharray: 6 2 !important;
}
svg[aria-roledescription^="flowchart"] .node[id^="flowchart-inpage"] .nodeLabel,
svg[aria-roledescription^="flowchart"] .node[id^="flowchart-outpage"] .nodeLabel {
    color: var(--d-f-c-alt) !important;
    font-weight: normal !important;
}

// 自定义：汇聚样式的多边形（菱形、梯形、平行四边形等）
svg[aria-roledescription^="flowchart"] .node[id^="flowchart-join"] > rect,
svg[aria-roledescription^="flowchart"] .node[id^="flowchart-join"] > polygon,
// 自定义：汇聚样式的圆形
svg[aria-roledescription^="flowchart"] .node[id^="flowchart-join"] > circle {
    fill: var(--d-f-c) !important;
    stroke-width: 0 !important;
}
svg[aria-roledescription^="flowchart"] .node[id^="flowchart-join"] > rect {
    x: -50px !important;
    y: -4px !important;
    width: 100px !important;
    height: 8px !important;
}
svg[aria-roledescription^="flowchart"] .node[id^="flowchart-joinv"] > rect {
    x: -4px !important;
    y: -50px !important;
    width: 8px !important;
    height: 100px !important;
}

// 在特定节点上鼠标悬停
svg[aria-roledescription^="flowchart"] .node[id^="flowchart-START"]:hover rect,
svg[aria-roledescription^="flowchart"] .node[id^="flowchart-join"]:hover :is(rect, circle, polygon),
svg[aria-roledescription^="flowchart"] .node[id^="flowchart-INIT"]:hover circle,
svg[aria-roledescription^="flowchart"] .node[id^="flowchart-FINAL"]:hover circle {
    fill: @aColor !important;
    stroke: @aColor !important;
    cursor: crosshair;
}
svg[aria-roledescription^="flowchart"] .node[id^="flowchart-END"]:hover rect {
    stroke: @aColor !important;
    cursor: crosshair;
}
svg[aria-roledescription^="flowchart"] .node[id^="flowchart-START"]:hover rect + .label .nodeLabel {
    color: @buttonForeColor !important;
}

// 鼠标在图元文本上悬停
svg[aria-roledescription^="flowchart"] .node:hover .label .nodeLabel {
    color: @aColor !important;
}

// 实条
svg[aria-roledescription^="flowchart"] .edgePaths path {
    stroke: var(--d-f-c) !important;
}
// 虚线
svg[aria-roledescription^="flowchart"] .edgePath .path[style*="stroke-dasharray"] {
    stroke-width: 1.5 !important;;
}

// 线条箭头
svg[aria-roledescription^="flowchart"] .marker.flowchart {
    fill: var(--d-f-c) !important;
}

// 线条文本背景
svg[aria-roledescription^="flowchart"] .edgeLabel .label div {
    background-color: var(--d-bc) !important;
}

// 线条文本
svg[aria-roledescription^="flowchart"] .label .edgeLabel {
    color: var(--d-f-c) !important;
    background-color: transparent !important;
}

// 线条文本上鼠标悬停
svg[aria-roledescription^="flowchart"] .label .edgeLabel:hover {
    color: @aColor !important;
    cursor: crosshair;
}

// 子图
svg[aria-roledescription^="flowchart"] .cluster rect {
    fill: var(--d-bc) !important;
    stroke: var(--d-f-c-alt) !important;
    stroke-width: 1 !important;
    stroke-dasharray: 6 6 !important;
}

// 子图文本
svg[aria-roledescription^="flowchart"] .cluster-label .nodeLabel { // keyword: flowchart
    color: var(--d-f-c-alt) !important;
    margin-left: 0 !important;
    // font-style: italic;
    font-weight: var(--v-f-w-title) !important;
    font-size: .875em !important;
    padding-right: .5em !important;
}
// 鼠标悬停
svg[aria-roledescription^="flowchart"] .cluster:hover rect {
    fill: var(--ac-theme1-alt) !important;
    stroke: @aColor !important;
    cursor: crosshair;
}
svg[aria-roledescription^="flowchart"] .cluster:hover .cluster-label .nodeLabel {
    font-weight: var(--v-f-w-title) !important;
    color: @aColor !important;
    cursor: crosshair;
}

// 自定义：流程图「开始」样式
svg[aria-roledescription^="flowchart"] .node[id^="flowchart-START"] rect {
    fill: var(--d-f-c) !important;
    stroke: var(--d-f-c) !important;
    stroke-width: 0 !important;
}
svg[aria-roledescription^="flowchart"] .node[id^="flowchart-START"] rect + .label .nodeLabel { // keyword: flowchart
    color: var(--d-bc) !important;
    font-weight: var(--v-f-w-title) !important;
}

// 自定义：流程图「结束」节点样式
svg[aria-roledescription^="flowchart"] .node[id^="flowchart-END"] rect {
    fill: var(--d-bc) !important;
    stroke: var(--d-f-c) !important;
    stroke-width: 4 !important;
}
svg[aria-roledescription^="flowchart"] .node[id^="flowchart-END"] rect+.label div {
    font-weight: var(--v-f-w-title) !important;
    color: var(--d-f-c) !important;
}

// 自定义：状态机图「初始」状态样式
svg[aria-roledescription^="flowchart"] .node[id^="flowchart-INIT"] circle {
    fill: var(--d-f-c) !important;
    stroke-width: 0 !important;
}

// 自定义：状态机图「最终」状态节点样式
svg[aria-roledescription^="flowchart"] .node[id^="flowchart-FINAL"] circle {
    fill: none !important;
    stroke: var(--d-f-c) !important;
    stroke-width: 4 !important;
}
svg[aria-roledescription^="flowchart"] .node[id^="flowchart-FINAL"] circle+.label div {
    color: var(--d-f-c) !important;
}

/* ----- sequeuce diagram 顺序图 / 时序图 ----- */

// 人物角色
svg[aria-roledescription="sequence"] .actor-man > :is(line, circle) {
    fill: var(--pn-c) !important;
    stroke: var(--d-f-c-alt) !important;
    stroke-width: 1 !important;
}
svg[aria-roledescription="sequence"] .actor-man:hover > :is(line, circle, text)  {
    stroke: @aColor !important;
    stroke-width: 2 !important;
    cursor: crosshair;
}
svg[aria-roledescription="sequence"] .actor-man:hover > circle {
    fill: var(--ac-theme1-alt) !important;
    stroke-width: 2 !important;
    cursor: crosshair;
}

// 非人物角色
svg[aria-roledescription="sequence"] .actor {
    stroke: var(--d-f-c-alt) !important;
    fill: var(--pn-c) !important;
    font-size: .875em !important;
    stroke-width: 1 !important;
}

// 角色上鼠标悬停
svg[aria-roledescription="sequence"] g:hover > :is(.actor, line[id^="actor"]) {
    fill: var(--ac-theme1-alt) !important;
    stroke: @aColor !important;
    stroke-width: 2 !important;
    cursor: crosshair;
}
svg[aria-roledescription="sequence"] g:hover > rect {
    fill: var(--ac-theme1-alt) !important;
    stroke: @aColor !important;
    stroke-width: 1 !important;
    cursor: crosshair;
}
svg[aria-roledescription="sequence"] g:hover text.actor > tspan {
    fill: @aColor !important;
}

// 角色文本
svg[aria-roledescription="sequence"] text.actor > tspan {
    fill: var(--d-f-c) !important;
    stroke: none !important;
    font-weight: var(--v-f-w-title);
}

// 角色生命线
svg[aria-roledescription="sequence"] line[id^="actor"] {
    stroke: var(--d-f-c-alt) !important;
    stroke-width: 1 !important;
}

// 消息文本
svg[aria-roledescription="sequence"] .messageText {
    fill: var(--d-f-c) !important;
    stroke: none !important;
    font-size: .875em !important;
    font-weight: normal !important;
    // line-height: 2em !important;
}

// 消息：实线
svg[aria-roledescription="sequence"] .messageLine0 {
    stroke-width: 2 !important;
    stroke: var(--d-f-c) !important;
}

// 消息：虚线
svg[aria-roledescription="sequence"] .messageLine1 {
    stroke-width: 2 !important;
    stroke: var(--d-f-c) !important;
    stroke-dasharray: 6, 3 !important;
}

// 普通消息箭头
svg[aria-roledescription="sequence"] #arrowhead path {
    fill: var(--d-f-c) !important;
    stroke: none !important;
}

// 消息上鼠标悬停
svg[aria-roledescription="sequence"] .messageText:hover,
svg[aria-roledescription="sequence"] .messageText:hover + :is(.messageLine0, .messageLine1) + .sequenceNumber {
    fill: @aColor !important;
    font-weight: var(--v-f-w-title) !important;
    cursor: crosshair;
}
svg[aria-roledescription="sequence"] .messageText:hover + :is(.messageLine0, .messageLine1) {
    stroke: @aColor !important;
}

// 消息序号
svg[aria-roledescription="sequence"] .sequenceNumber {
    color: var(--d-bc) !important;
    fill: var(--d-bc) !important;
    font-weight: var(--v-f-w-title) !important;
    font-size: .875em;
}

// 消息序号背景
svg[aria-roledescription="sequence"] #sequencenumber {
    fill: var(--d-f-c) !important;
    stroke: var(--d-f-c) !important;
    stroke-width: 0 !important;
    transform: scale(.5);
    transform-origin: 15px 15px;
}

// 异步消息箭头
svg[aria-roledescription="sequence"] #crosshead path {
    fill: var(--d-f-c-alt) !important;
    stroke: var(--d-f-c) !important;
}

// 活动块
svg[aria-roledescription="sequence"] rect[class^="activation"] {
    fill: var(--d-f-c-alt) !important;
    stroke-width: 0 !important;
}

// 片断的类型标签背景
svg[aria-roledescription="sequence"] .labelBox {
    stroke: none !important;
    fill: var(--mm-c-purple) !important;
}

// 角标
// 片断的类型文本
svg[aria-roledescription="sequence"] g > .labelText {
    fill: var(--d-f-c) !important;
    font-size: .875em !important;
    font-weight: var(--v-f-w-title) !important;
}

//片断的标题标签文本
svg[aria-roledescription="sequence"] .loopText > tspan {
    fill: var(--mm-c-purple) !important;
    font-size: .875em !important;
    font-weight: var(--v-f-w-title) !important;
}
svg[aria-roledescription="sequence"] .loopText > tspan {
    font-size: 1em;
}
svg[aria-roledescription="sequence"] .loopText:hover > tspan {
    fill: var(--ac-theme1) !important;
    cursor: crosshair;
}

// 片断的线框
svg[aria-roledescription="sequence"] .loopLine {
    stroke-width: 1 !important;
    stroke-dasharray: none !important;
    stroke: var(--mm-c-purple) !important;
}

// 片断上鼠标悬停
svg[aria-roledescription="sequence"] g:hover > .loopLine {
    // stroke: var(--ac-theme1) !important;
    stroke-width: 4 !important;
    stroke-linecap: round !important;
    cursor: crosshair;
}
svg[aria-roledescription="sequence"] g:hover > polygon,
svg[aria-roledescription="sequence"] g:hover > .loopText > tspan {
    // fill: var(--ac-theme1) !important;
    cursor: crosshair;
}
svg[aria-roledescription="sequence"] g:hover > .labelText {
    // fill: var(--d-f-c) !important;
    cursor: crosshair;
}

// 备注背景
svg[aria-roledescription="sequence"] .note {
    stroke: var(--mm-c-yellow) !important;
    stroke-dasharray: 5 !important;
    fill: var(--mm-c-yellow-alt) !important;
}

// 备注文本
svg[aria-roledescription="sequence"] .noteText tspan {
    fill: var(--d-f-c) !important;
    stroke: none !important;
    font-size: .875em !important;
    font-family: var(--v-f-fm-text) !important;
}

// --- 供 VLOOK.js 使用 ---
// 扩展：人物角色（旧有格式，前缀为 @）
.v-actor-person {
    fill: var(--pn-c) !important;
    stroke: var(--d-f-c-alt) !important;
}
// 扩展：重要系统角色
.v-actor-key-sys {
    stroke-width: 4 !important;
    font-weight: var(--v-f-w-title) !important;
}
// 扩展：外部系统角色
.v-actor-ext-sys {
    stroke-dasharray: 6, 2 !important;
    font-style: italic !important;
}

/* ----- state diagram 状态机图 ----- */

svg[aria-roledescription="stateDiagram"] {
    font-size: .875em !important;
}

// 开始
svg[aria-roledescription="stateDiagram"] .node circle.state-start {
    fill: var(--d-f-c) !important;
    stroke: var(--d-f-c) !important;
}

// 结束
svg[aria-roledescription="stateDiagram"] .node circle.state-end {
    fill: var(--d-bc) !important;
    stroke: var(--d-f-c) !important;
}

// 聚合
svg[aria-roledescription="stateDiagram"] .node .fork-join {
    fill: var(--d-f-c-alt) !important;
    // stroke: var(--d-f-c-alt) !important;
    stroke-width: 0 !important;
}

// 线条文本下的形状背景
svg[aria-roledescription="stateDiagram"] .edgeLabel .label rect {
    fill: var(--d-bc) !important;
}
// 线条文本
svg[aria-roledescription="stateDiagram"] .edgeLabel {
    text-align: center;
}
// 线条文本上鼠标悬停
svg[aria-roledescription="stateDiagram"] .edgeLabel:hover {
    color: @aColor !important;
    cursor: crosshair;
}

// 状态节点
svg[aria-roledescription="stateDiagram"] .statediagram-state .label-container {
    fill: var(--d-f-c) !important;
    stroke-width: 0 !important;
    // stroke: var(--d-bc) !important;
}
// 状态文本
svg[aria-roledescription="stateDiagram"] .statediagram-state .nodeLabel {
    color: var(--d-bc) !important;
    font-weight: bold !important;
}
svg[aria-roledescription="stateDiagram"] .statediagram-state .label {
    text-align: center;
}

// 状态节点上鼠标悬停
svg[aria-roledescription="stateDiagram"] .statediagram-state:hover .label-container {
    fill: @aColor !important;
    // stroke: var(--d-bc) !important;
}
svg[aria-roledescription="stateDiagram"] .statediagram-state:hover .nodeLabel {
    color: @buttonForeColor !important;
}

// 状态组外容器
svg[aria-roledescription="stateDiagram"] .statediagram-cluster .outer {
    fill: var(--d-f-c-alt) !important;
    stroke: var(--d-f-c-alt) !important;
}
// 状态组内容器
svg[aria-roledescription="stateDiagram"] .statediagram-cluster .inner,
svg[aria-roledescription="stateDiagram"] .nodes .divider {
    fill: var(--d-bc) !important;
    stroke: var(--d-f-c-alt) !important;
}
// 状态组标题
svg[aria-roledescription="stateDiagram"] .statediagram-cluster .cluster-label .nodeLabel {
    color: var(--d-f-c) !important;
    font-size: .75em !important;
}
svg[aria-roledescription="stateDiagram"] .statediagram-cluster .cluster-label {
    text-align: center;
}

// 注释
svg[aria-roledescription="stateDiagram"] .statediagram-note rect {
    stroke: var(--mm-c-yellow) !important;
    stroke-dasharray: 5 !important;
    fill: var(--mm-c-yellow) !important;
}
// 注释文本
svg[aria-roledescription="stateDiagram"] .statediagram-note .nodeLabel {
    color: var(--d-f-c) !important;
    font-weight: normal !important;
    font-size: .875em !important;
}
svg[aria-roledescription="stateDiagram"] .statediagram-note .label div {
    text-align: left;
}

// 状态转换线
svg[aria-roledescription="stateDiagram"] .edgePaths .transition {
    stroke: var(--d-f-c-alt) !important;
}
// 箭头
svg[aria-roledescription="stateDiagram"] #statediagram-barbEnd {
    fill: var(--d-f-c-alt) !important;
    stroke:  var(--d-f-c-alt) !important;
}

/* ----- class diagram 类图 ----- */

svg[aria-roledescription="classDiagram"] {
    font-size: .875em !important;
}

// 类背景
svg[aria-roledescription="classDiagram"] .node > rect.outer {
    fill: var(--pn-c) !important;
    stroke: var(--d-f-c-alt) !important;
    stroke-width: 2 !important;
}

// 类上鼠标悬停
svg[aria-roledescription="classDiagram"] .node:hover .outer,
svg[aria-roledescription="classDiagram"] .node:hover :is(.outer+.divider, .outer+.divider+.divider) {
    stroke: @aColor !important;
}
// svg[aria-roledescription="classDiagram"] .node:hover .label .classTitle .nodeLabel {
//     color: @aColor !important;
// }

// 类属性、方法分隔线
svg[aria-roledescription="classDiagram"] .node > line.divider {
    stroke: var(--d-f-c-alt) !important;
    stroke-width: 1 !important;
}
svg[aria-roledescription="classDiagram"] .node > rect.outer + line.divider {
    stroke: var(--d-f-c-alt) !important;
    stroke-width: 2 !important;
}

// 类名
svg[aria-roledescription="classDiagram"] .label .classTitle .nodeLabel {
    color: var(--d-f-c) !important;
    font-weight: bold !important;
}
svg[aria-roledescription="classDiagram"] .label .classTitle {
    text-align: center;
}

// 方法、属性等文本
svg[aria-roledescription="classDiagram"] .label .nodeLabel {
    color: var(--d-f-c-alt) !important;
    font-weight: normal !important;
}

// 线条文本背景
svg[aria-roledescription="classDiagram"] .edgeLabel .label div {
    background-color: var(--d-bc) !important;
}
svg[aria-roledescription="classDiagram"] .edgeLabel .label span {
    background-color: transparent !important;
}

// 线条文本上鼠标悬停
svg[aria-roledescription^="classDiagram"] .label .edgeLabel:hover {
    color: @aColor !important;
    cursor: crosshair;
}

// 关系箭头
svg[aria-roledescription="classDiagram"] :is(
    #classDiagram-compositionStart > path,
    #classDiagram-compositionEnd > path,
    #classDiagram-dependencyStart > path,
    #classDiagram-dependencyEnd > path,
    #classDiagram-extensionStart > path,
    #classDiagram-extensionEnd > path,
    #classDiagram-aggregationStart > path,
    #classDiagram-aggregationEnd > path,
    #classDiagram-lollipopStart > circle) {
    fill: var(--d-f-c-alt) !important;
    stroke:  var(--d-f-c-alt) !important;
    stroke-width: 1 !important;
}

// 关系线
svg[aria-roledescription="classDiagram"] .edgePaths .relation {
    stroke: var(--d-f-c-alt) !important;
}

/* ----- gantt diagram 甘特图 ----- */

// 标题
svg[aria-roledescription="gantt"] .titleText {
    text-anchor: middle !important;
    font-size: 1.5em !important;
    // line-height: 2em !important;
    font-weight: var(--v-f-w-title) !important;
    fill: var(--d-f-c) !important;
}

// 分区背景
svg[aria-roledescription="gantt"] .section {
    stroke: none !important;
}
svg[aria-roledescription="gantt"] :is(.section0, .section2, .section4) {
    fill: var(--d-f-c-alt) !important;
    opacity: .15 !important;
}
svg[aria-roledescription="gantt"] :is(.section1, .section3, .section5) {
    fill: var(--d-f-c-alt) !important;
    opacity: .05 !important;
}

// 日期
svg[aria-roledescription="gantt"] .grid > .tick > line {
    stroke: var(--d-f-c-alt) !important;
    stroke-width: 1 !important;
    opacity: .3 !important;
}
svg[aria-roledescription="gantt"] .grid > .tick > text {
    fill: var(--d-f-c-alt) !important;
}

// 排除的日期
svg[aria-roledescription="gantt"] .exclude-range {
    fill: var(--mm-c-yellow) !important;
    opacity: .15 !important;
}

// 当前时间标识线
svg[aria-roledescription="gantt"] g.today line.today {
    stroke: var(--mm-c-red) !important;
    stroke-width: 3 !important;
}

// 普通任务-执行中
svg[aria-roledescription="gantt"] rect[class*="active"] {
    fill: var(--mm-c-blue) !important;
    stroke: var(--d-bc) !important;
    stroke-width: 1 !important;
}
// 普通任务-已完成
svg[aria-roledescription="gantt"] rect[class*="done"] {
    fill: var(--mm-c-gray) !important;
    stroke: var(--mm-c-blue) !important;
    stroke-width: 1 !important;
    stroke-dasharray: none !important;
}

// 关键任务-执行中
svg[aria-roledescription="gantt"] rect[class*="activeCrit"] {
    fill: var(--mm-c-purple) !important;
    stroke: var(--d-bc) !important;
    stroke-width: 1 !important;
}
// 关键任务-已完成
svg[aria-roledescription="gantt"] rect[class*="doneCrit"] {
    fill: var(--mm-c-gray) !important;
    stroke: var(--mm-c-purple) !important;
    stroke-width: 1 !important;
    stroke-dasharray: none !important;
}

// 普通未来任务
svg[aria-roledescription="gantt"] rect[class^="task task"] {
    fill: var(--d-bc) !important;
    stroke: var(--mm-c-blue) !important;
    stroke-width: 1 !important;
    stroke-dasharray: 4 !important;
}
// 关键未来任务
svg[aria-roledescription="gantt"] rect[class^="task crit"] {
    fill: var(--d-bc) !important;
    stroke: var(--mm-c-purple) !important;
    stroke-width: 1 !important;
    stroke-dasharray: 4 !important;
}

// 里程碑
svg[aria-roledescription="gantt"] rect[class^="task milestone"] {
    fill: var(--mm-c-green) !important;
    stroke: var(--d-bc) !important;
    stroke-width: 2 !important;
    stroke-dasharray: none !important;
}

/* ----- Gitgraph 历史图 ----- */

// 标题
svg[aria-roledescription="gitGraph"] .gitTitleText {
    fill: var(--d-f-c) !important;
    font-weight: var(--v-f-w-title) !important;
}

// 分支文字
svg[aria-roledescription="gitGraph"] .branchLabel .row {
    font-weight: var(--v-f-w-title) !important;
    fill: fade(#FFFFFF, 90%);
}

// 提交节点
svg[aria-roledescription="gitGraph"] .commit-bullets :is(.commit0, .commit1, .commit2, .commit3, .commit4, .commit5, .commit6, .commit7) {
    stroke: var(--d-bc) !important;
    stroke-width: 2 !important;;
}

// 分支分隔行
svg[aria-roledescription="gitGraph"] .branch {
    stroke: var(--d-f-c-alt) !important;
    opacity: .3 !important;
}

// 分支 0 - 主分支
svg[aria-roledescription="gitGraph"] .branchLabelBkg.label0,
svg[aria-roledescription="gitGraph"] .commit-bullets .commit0 {
    fill: var(--mm-c-blue) !important;
}
svg[aria-roledescription="gitGraph"] .commit-arrows .arrow0 {
    stroke: var(--mm-c-blue) !important;
}

// 分支 1
svg[aria-roledescription="gitGraph"] .branchLabelBkg.label1,
svg[aria-roledescription="gitGraph"] .commit-bullets .commit1 {
    fill: var(--mm-c-yellow) !important;
}
svg[aria-roledescription="gitGraph"] .commit-arrows .arrow1 {
    stroke: var(--mm-c-yellow) !important;
}

// 分支 2
svg[aria-roledescription="gitGraph"] .branchLabelBkg.label2,
svg[aria-roledescription="gitGraph"] .commit-bullets .commit2 {
    fill: var(--mm-c-green) !important;
}
svg[aria-roledescription="gitGraph"] .commit-arrows .arrow2 {
    stroke: var(--mm-c-green) !important;
}

// 分支 3
svg[aria-roledescription="gitGraph"] .branchLabelBkg.label3,
svg[aria-roledescription="gitGraph"] .commit-bullets .commit3 {
    fill: var(--mm-c-orange) !important;
}
svg[aria-roledescription="gitGraph"] .commit-arrows .arrow3 {
    stroke: var(--mm-c-orange) !important;
}

// 分支 4
svg[aria-roledescription="gitGraph"] .branchLabelBkg.label4,
svg[aria-roledescription="gitGraph"] .commit-bullets .commit4 {
    fill: var(--mm-c-pink) !important;
}
svg[aria-roledescription="gitGraph"] .commit-arrows .arrow4 {
    stroke: var(--mm-c-pink) !important;
}

// 分支 5
svg[aria-roledescription="gitGraph"] .branchLabelBkg.label5,
svg[aria-roledescription="gitGraph"] .commit-bullets .commit5 {
    fill: var(--mm-c-cyan) !important;
}
svg[aria-roledescription="gitGraph"] .commit-arrows .arrow5 {
    stroke: var(--mm-c-cyan) !important;
}

// 分支 6
svg[aria-roledescription="gitGraph"] .branchLabelBkg.label6,
svg[aria-roledescription="gitGraph"] .commit-bullets .commit6 {
    fill: var(--mm-c-purple) !important;
}
svg[aria-roledescription="gitGraph"] .commit-arrows .arrow6 {
    stroke: var(--mm-c-purple) !important;
}

// 分支 7
svg[aria-roledescription="gitGraph"] .branchLabelBkg.label7,
svg[aria-roledescription="gitGraph"] .commit-bullets .commit7 {
    fill: var(--mm-c-red) !important;
}
svg[aria-roledescription="gitGraph"] .commit-arrows .arrow7 {
    stroke: var(--mm-c-red) !important;
}

// 合并节点
svg[aria-roledescription="gitGraph"] .commit-bullets .commit-merge {
    stroke-width: 0 !important;
    fill: var(--d-bc) !important;
}

// 高亮节点
svg[aria-roledescription="gitGraph"] .commit-bullets .commit-highlight-outer {
    stroke: var(--d-bc) !important;
    stroke-width: 2 !important;
    fill: var(--d-f-c) !important;
}
svg[aria-roledescription="gitGraph"] .commit-bullets .commit-highlight-inner {
    stroke-width: 2 !important;
    stroke: var(--d-bc) !important;
}

// tag 标签
svg[aria-roledescription="gitGraph"] .tag-label-bkg {
    fill: var(--d-bc) !important;
    stroke: var(--d-f-c-alt) !important;
}
svg[aria-roledescription="gitGraph"] .tag-hole {
    fill: var(--d-bc) !important;
    stroke: var(--d-f-c-alt) !important;
    stroke-width: 1 !important;
}
svg[aria-roledescription="gitGraph"] .tag-label {
    fill: var(--d-f-c) !important;
}

// 提交标记背景
svg[aria-roledescription="gitGraph"] .commit-labels .commit-label-bkg {
    fill: var(--d-f-c-alt) !important;
}

// 提交标记文本
svg[aria-roledescription="gitGraph"] .commit-labels .commit-label {
    fill: var(--d-f-c) !important;
}

/* ----- Entity Relationship (ER) 实体关系图 ----- */

// 实体背景
svg[aria-roledescription="er"] g .entityBox {
    fill: var(--pn-c) !important;
    stroke: var(--d-f-c-alt) !important;
    stroke-width: 2 !important;
}

// 实体上鼠标悬停
svg[aria-roledescription="er"] g:hover .entityBox {
    stroke: @aColor !important;
    cursor: crosshair;
}

// 实物名称
svg[aria-roledescription="er"] g > text.entityLabel:first-of-type {
    font-weight: bold !important;
}

// 属性（奇数行）
svg[aria-roledescription="er"] g .attributeBoxOdd {
    fill: var(--d-f-c-alt) !important;
    stroke: var(--d-f-c-alt) !important;
    stroke-width: 1 !important;
    opacity: .3 !important;
}
// （偶数行）
svg[aria-roledescription="er"] g .attributeBoxEven {
    fill: var(--d-f-c-alt) !important;
    stroke: var(--d-f-c-alt) !important;
    opacity: .2 !important;
}

// 线条文本背景
svg[aria-roledescription="er"] .relationshipLabelBox {
    fill: var(--d-bc) !important;
    opacity: 1 !important;
}

// 关系箭头
svg[aria-roledescription="er"] :is(
    #ONLY_ONE_START > path,
    #ONLY_ONE_END > path,
    #ZERO_OR_ONE_START > path,
    #ZERO_OR_ONE_END > path,
    #ONE_OR_MORE_START > path,
    #ONE_OR_MORE_END > path,
    #ZERO_OR_MORE_START > path,
    #ZERO_OR_MORE_END > path,
    .relationshipLine) {
    stroke: var(--d-f-c-alt) !important;
    stroke-width: 1 !important;
}
svg[aria-roledescription="er"] :is(
    #ZERO_OR_ONE_START,
    #ZERO_OR_ONE_END,
    #ZERO_OR_MORE_START,
    #ZERO_OR_MORE_END) > circle {
    fill: var(--d-bc) !important;
    stroke: var(--d-f-c-alt) !important;
    stroke-width: 1 !important;
}

/* ----- timeline 时间线图 ----- */

// 分段
svg[aria-roledescription="timeline"] g > g[class*="section"] path {
    fill: var(--d-bc) !important;
}
svg[aria-roledescription="timeline"] g > g[class*="section"] line {
    stroke: var(--pn-c) !important;
}
svg[aria-roledescription="timeline"] g > g[class*="section"] text > tspan {
    fill: var(--d-f-c-alt) !important;
    font-style: italic !important;
}

// 时间连接线
svg[aria-roledescription="timeline"] .lineWrapper > line {
    stroke: var(--d-f-c-alt) !important;
}

// 年份
svg[aria-roledescription="timeline"] .taskWrapper > g[class*="section"] path {
    fill: var(--pn-c) !important;
}
svg[aria-roledescription="timeline"] .taskWrapper > g[class*="section"] line {
    stroke: var(--d-f-c-alt) !important;
    opacity: .5 !important;
}
svg[aria-roledescription="timeline"] .taskWrapper > g[class*="section"] text > tspan {
    font-weight: bold !important;
    font-style: normal !important;
}

// 事件
svg[aria-roledescription="timeline"] .eventWrapper > g[class*="section"] path {
    fill: var(--d-f-c-alt) !important;
}
svg[aria-roledescription="timeline"] .eventWrapper > g[class*="section"] line {
    stroke: var(--d-f-c) !important;
}
svg[aria-roledescription="timeline"] .eventWrapper > g[class*="section"] text > tspan {
    fill: var(--d-bc) !important;
    font-style: normal !important;
}

/* ----- Mindmap 思维导图 ----- */

// 节点
svg[aria-roledescription="mindmap"] g .mindmap-node rect,
svg[aria-roledescription="mindmap"] g .mindmap-node circle,
svg[aria-roledescription="mindmap"] g .mindmap-node path,
svg[aria-roledescription="mindmap"] g .mindmap-node polygon {
    fill: var(--d-f-c-alt) !important;
}
svg[aria-roledescription="mindmap"] g .mindmap-node line {
    stroke: var(--d-f-c) !important;
}
svg[aria-roledescription="mindmap"] g .mindmap-node text > tspan {
    fill: var(--d-bc) !important;
}
svg[aria-roledescription="mindmap"] g .section-root text > tspan {
    font-weight: bold !important;
}
// icon
svg[aria-roledescription="mindmap"] g .mindmap-node i[class*="node-icon"] {
    color: var(--d-bc) !important;
}

// 线
svg[aria-roledescription="mindmap"] g.mindmap-edges path {
    stroke: var(--d-f-c-alt) !important;
    opacity: .5 !important;
}

/* ----- requirement 需求图 ----- */

// svg[aria-roledescription="requirement"] {
//     font-size: .875em !important;
// }

// 卡片背景
svg[aria-roledescription="requirement"] g > .reqBox {
    fill: var(--pn-c) !important;
    stroke: var(--d-f-c-alt) !important;
    stroke-width: 2 !important;
}
// 分隔线
svg[aria-roledescription="requirement"] g > .req-title-line {
    stroke: var(--d-f-c-alt) !important;
    stroke-width: 1 !important;
}

// 卡片上鼠档悬停
svg[aria-roledescription="requirement"] g:hover > :is(.reqBox, .req-title-line) {
    stroke: @aColor !important;
    cursor: crosshair;
}

// 文本
svg[aria-roledescription="requirement"] g > text.reqLabel > tspan {
    fill: var(--d-f-c-alt) !important;
}

// 标题
svg[aria-roledescription="requirement"] g > text.reqTitle > tspan {
    fill: var(--d-f-c) !important;
    font-weight: bold !important;
}
// 分类
svg[aria-roledescription="requirement"] g > text.reqTitle > tspan:first-child {
    fill: var(--d-f-c-alt) !important;
    font-weight: normal !important;
    font-size: .875em !important;
}

// 线条
svg[aria-roledescription="requirement"] path.relationshipLine {
    stroke: var(--d-f-c-alt) !important;
    stroke-width: 1 !important;
}
// 线条文本背景
svg[aria-roledescription="requirement"] rect.reqLabelBox {
    fill: var(--d-bc) !important;
}

// 线条文本上鼠标悬停
svg[aria-roledescription="requirement"] .relationshipLabel:hover {
    fill: @aColor !important;
    cursor: crosshair;
}

// 箭头
svg[aria-roledescription="requirement"] :is(#arrow_line_ending, #contains_line_ending) :is(circle, line, path) {
    stroke: var(--d-f-c-alt) !important;
}

/**************************************
* VLOOK 针对 Mermaid 增加
**************************************/
.v-mermaid-restyler {
    padding-bottom: 0 !important;
    margin-top: 0 !important;
    margin-bottom: -9px !important;
}
